# Task ID: 6
# Title: Implement custom theme provider with user preference detection
# Status: done
# Dependencies: 3, 4
# Priority: high
# Description: Create a custom theme provider that detects and respects user preference
# Details:
Implement a new theming system without using @radix-ui/themes. Tasks include:
1. Create a new theme context/provider
2. Implement user preference detection (prefers-color-scheme media query)
3. Add localStorage persistence for user theme choices
4. Support dark mode and light mode
5. Ensure the API is similar to the current implementation to minimize changes

# Implementation:
- Successfully created a custom ThemeProvider component in mint-ui/src/components/theme/theme.tsx
- Implemented theme context with React.createContext
- Implemented user preference detection using window.matchMedia('(prefers-color-scheme: dark)')
- Added localStorage persistence with localStorage.setItem/getItem("mint-ui-theme")
- Implemented theme switching between light and dark modes via CSS class toggling
- Created a useTheme hook in mint-ui/src/components/theme/use-theme.ts for accessing theme context
- Created a ThemeToggle component in mint-ui/src/components/theme/theme-toggle.tsx
- Updated index.ts to export all theme-related components and hooks
- Integrated the theme components in my-web project

# Testing Results:
- Verified that theme defaults to user system preference when no localStorage value exists
- Confirmed that theme preference persists across page refreshes
- Verified that theme changes apply the correct CSS classes to the document root
- Confirmed that components respond correctly to theme changes
- Tested the ThemeToggle component functionality

# Status:
This task is complete. The custom theme provider has been successfully implemented with all required functionality.
